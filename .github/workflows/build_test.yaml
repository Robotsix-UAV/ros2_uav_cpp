name: Test

permissions:
  contents: write

on:
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["Versioning"]
    types:
      - completed

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Delete deployment
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: github-pages
          onlyRemoveDeployments: true

  test_and_documentation:
    runs-on: ubuntu-latest
    needs: cleanup
    steps:
      - name: Create the src dir
        run: |
          mkdir -p ${{ github.workspace }}/src/${{ github.event.repository.name }}

      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          path: src/${{ github.event.repository.name }}/

      - name: Parse dependencies.repos and clone repositories
        run: |
          cd ${{ github.workspace }}/src
          cat ${{ github.event.repository.name }}/dependencies.repos | grep 'url:' | awk '{print $2}' > repo_urls.txt
          cat ${{ github.event.repository.name }}/dependencies.repos | grep 'version:' | awk '{print $2}' > repo_versions.txt
          paste repo_urls.txt repo_versions.txt > repos.txt
          while IFS=$'\t' read -r url version; do
            repo_name=$(basename $url .git)
            git clone $url ${{ github.workspace }}/src/$repo_name
            cd ${{ github.workspace }}/src/$repo_name
            git checkout $version
            cd ${{ github.workspace }}/src
            ls -all
          done < repos.txt

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov doxygen graphviz python3-pip

      - name: Install rosdep and colcon
        run: |
          sudo pip install -U rosdep
          pip install colcon-common-extensions colcon-lcov-result

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install curl -y
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update
          sudo rosdep init
          rosdep update
          rosdep install --from-paths src --ignore-src --rosdistro humble

      - name: Build the workspace
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --symlink-install --cmake-args -DCMAKE_CXX_FLAGS='-fprofile-arcs -ftest-coverage -fno-elide-constructors -fno-default-inline -ffunction-sections' -DCMAKE_C_FLAGS='-fprofile-arcs -ftest-coverage'

      - name: Test and generate code coverage
        run: |
          source /opt/ros/humble/setup.bash
          colcon lcov-result --initial --packages-select ${{ github.event.repository.name }}
          colcon test --event-handlers console_direct+ --packages-select ${{ github.event.repository.name }} --return-code-on-test-failure
          colcon lcov-result --filter */test/* --packages-select ${{ github.event.repository.name }}

      - name: Get documentation directory for deployment
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "DEPLOY_REF=PR-${{ github.event.number }}" >> $GITHUB_ENV
          else
            cd ${{ github.workspace }}/src/${{ github.event.repository.name }}
            git fetch --tags
            TAG=$(git describe --tags --abbrev=0)
            VERSION=${TAG%.*}
            echo "DEPLOY_REF=${VERSION}" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: |
          python3 -m pip install mike

      - name: Generate example documentation
        run: |
          git clone https://github.com/Robotsix-UAV/example_cpp_to_md
          python3 example_cpp_to_md/example_cpp_to_md.py ${{ github.workspace }}/src/${{ github.event.repository.name }}/examples ${{ github.workspace }}/src/${{ github.event.repository.name }}/docs

      - name: Create and push with mike
        run: |
          git config --global user.name robotsix_bot
          git config --global user.email robotsix_bot@noreply.com
          cd ${{ github.workspace }}/src/${{ github.event.repository.name }}
          git fetch origin gh-pages --depth=1 || true
          mike deploy ${{ env.DEPLOY_REF }} -b gh-pages -p

      - name: Build rosdoc2 Documentation
        shell: bash
        run: |
          git clone https://github.com/ros-infrastructure/rosdoc2
          cd rosdoc2
          pip install .
          cd ${{ github.workspace }}
          rosdoc2 build -p ${{ github.workspace }}/src/${{ github.event.repository.name }}

      - name: Clone and checkout gh-pages branch
        run: |
          git clone https://github.com/${{ github.repository }}
          cd ${{ github.event.repository.name }}
          git fetch origin gh-pages --depth=1
          git checkout gh-pages

      - name: Copy lcov results
        run: |
          cd ${{ github.event.repository.name }}
          mkdir -p ${{ env.DEPLOY_REF }}
          cp -r ${{ github.workspace }}/lcov ${{ env.DEPLOY_REF }}

      - name: Generate badge
        run: |
          git clone https://github.com/damien-robotsix/lcov-badger.git
          python3 lcov-badger/lcov-badger.py ${{ github.event.repository.name }}/${{ env.DEPLOY_REF }}/lcov/total_coverage.info ${{ github.event.repository.name }}/${{ env.DEPLOY_REF }}/lcov/badge.svg

      - name: Copy generated documentation
        run: |
          cd ${{ github.event.repository.name }}
          mkdir -p ${{ env.DEPLOY_REF }}/dev
          cp -r ${{ github.workspace }}/docs_output/${{ github.event.repository.name }} ${{ env.DEPLOY_REF }}/dev

      - name: Push changes to gh-pages squashing commits
        run: |
          cd ${{ github.event.repository.name }}
          git add .
          git commit -m "Documentation deployment"
          git reset $(git commit-tree HEAD^{tree} -m "gh-pages")
          git remote set-url --push origin https://$damien-robotsix:${{ secrets.MY_GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push -f origin gh-pages
